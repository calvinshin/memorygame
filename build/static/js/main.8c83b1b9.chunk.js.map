{"version":3,"sources":["components/Button/index.js","components/Jumbotron/index.js","components/Card/index.js","App.js","index.js"],"names":["Button","props","react_default","a","createElement","className","onClick","function","text","Jumbotron","properties","score","click","gameState","components_Button","Card","object","image","src","alt","App","state","cards","alreadyClicked","newGame","value","_this","setState","shuffle","filter","element","indexOf","length","console","log","newScore","newAlreadyClicked","slice","push","i","j","Number","Math","floor","random","_ref","_this2","this","components_Jumbotron","map","card","components_Card","key","id","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"+gFAUeA,MARf,SAAgBC,GACZ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBC,QAAS,kBAAML,EAAMM,WACnDN,EAAMO,OC0BJC,MA1Bf,SAAoBC,GAChB,OACIR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,mBAAWM,EAAWC,OAEtBT,EAAAC,EAAAC,cAAA,OAAKE,QAAS,kBAAMI,EAAWE,WACD,IAAzBF,EAAWG,WACRX,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,yBAEAF,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAACU,EAAD,CACAN,KAAO,gBAMO,IAAzBE,EAAWG,WACRX,EAAAC,EAAAC,cAAA,uDCRDW,MAbf,SAAeC,GACX,OACId,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqBC,QAAS,kBAAMU,EAAOJ,MAAMI,EAAOC,SACnEf,EAAAC,EAAAC,cAAA,OAAKc,IAAKF,EAAOC,MAAOZ,UAAU,0BAA0Bc,IAAI,OC4E7DC,6MA1EbC,MAAQ,CACNC,QACAC,eAAiB,GACjBV,WAAW,EACXF,MAAO,KAGTa,QAAU,SAACC,GACTC,EAAKC,SAAS,CACZhB,MAAQ,EACRE,WAAY,EACZU,eAAiB,QAIrBK,QAAU,SAAAX,GAER,IAA4B,IAAzBS,EAAKL,MAAMR,UAEZ,GAAkG,IAA/Fa,EAAKL,MAAME,eAAeM,OAAO,SAAAC,GAAY,OAAmC,IAA5BA,EAAQC,QAAQd,KAAgBe,OACrFC,QAAQC,IAAI,cACZR,EAAKC,SAAS,CAACd,WAAU,QAEtB,CAEL,IAAIsB,EAAWT,EAAKL,MAAMV,MAAQ,EAClCe,EAAKC,SAAS,CAAChB,MAAMwB,IAGrB,IAAIC,EAAoBV,EAAKL,MAAME,eAAec,QAElDD,EAAkBE,KAAKrB,GAEvBS,EAAKC,SAAS,CAACJ,eAAiBa,IAGhC,IAAI,IAAIG,EAAIjB,EAAMU,OAAS,EAAGO,EAAI,EAAGA,IAAO,CAC1C,IAAIC,EAAIC,OACRD,EAAIE,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IAFM,IAAAM,EAGnB,CAACvB,EAAMkB,GAAIlB,EAAMiB,IAAvCjB,EAAMiB,GAHmCM,EAAA,GAG/BvB,EAAMkB,GAHyBK,EAAA,GAO5CnB,EAAKC,SAAS,CAACL,MAAMA,SAIrBW,QAAQC,IAAI,gHAIP,IAAAY,EAAAC,KACP,OACE7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC4C,EAAD,CACErC,MAASoC,KAAK1B,MAAMV,MACpBE,UAAakC,KAAK1B,MAAMR,UACxBD,MAASmC,KAAKvB,UAIhBtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACZiB,EAAM2B,IAAI,SAAAC,GAAI,OACbhD,EAAAC,EAAAC,cAAC+C,EAAD,CACElC,MAASiC,EAAKjC,MACdmC,IAAOF,EAAKG,GACZzC,MAASkC,EAAKlB,QACdyB,GAAMH,EAAKG,gBApEPC,IAAMC,WCJxBC,IAASC,OAAOvD,EAAAC,EAAAC,cAACsD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.8c83b1b9.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nfunction Button(props) {\r\n    return(\r\n        <div className=\"btn btn-secondary\" onClick={() => props.function}>\r\n            {props.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button","import React from \"react\";\r\n// import CardBtn from \"../CardBtn\";\r\nimport \"./style.css\";\r\nimport Button from \"../Button\"\r\n\r\nfunction Jumbotron (properties) {\r\n    return(\r\n        <div className=\"jumbotron\"> \r\n            <h1>The Memory Game</h1>\r\n            <p>Score: {properties.score}</p>\r\n\r\n            <div onClick={() => properties.click()}>\r\n                {properties.gameState === false &&\r\n                    <div>\r\n                        <div>Game Over!\r\n                        </div>\r\n                        <p />\r\n                        <Button \r\n                        text = \"New Game\"\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            {properties.gameState === true &&\r\n                <div>Try not to select the same card.</div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Jumbotron;","import React from \"react\";\r\n// import CardBtn from \"../CardBtn\";\r\nimport \"./style.css\";\r\n\r\nfunction Card (object) {\r\n    return(\r\n        <div className=\"card cardStyle m-2\" onClick={() => object.click(object.image)}>\r\n            <img src={object.image} className=\"card-img-top imageStyle\" alt=\"\">\r\n            </img>\r\n            {/* <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Title</h5>\r\n                <p>Test Information + the phrase \"{object.test}\"</p>\r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\nimport cards from \"./cards.json\"\n\nimport Jumbotron from \"./components/Jumbotron\"\nimport Card from \"./components/Card\"\n\n// import shuffle from \"./functions/shuffle\"\n\nclass App extends React.Component {\n  state = {\n    cards,\n    alreadyClicked : [],\n    gameState: true,\n    score: 0\n  }\n\n  newGame = (value) => {\n    this.setState({\n      score : 0,\n      gameState : true,\n      alreadyClicked : []\n    })\n  }\n\n  shuffle = image => {\n    // only shuffle if the gameState = true;\n    if(this.state.gameState === true) {\n      // Determine if the value exists in the array or not;\n      if(this.state.alreadyClicked.filter(element => {return element.indexOf(image) !== -1}).length !== 0) {\n        console.log(\"Game OVER!\")\n        this.setState({gameState:false})\n      }\n      else {\n      // Increase the score\n      let newScore = this.state.score + 1;\n      this.setState({score:newScore});\n\n      // First create a sliced version of the array\n      let newAlreadyClicked = this.state.alreadyClicked.slice();\n      // push the new link into the array\n      newAlreadyClicked.push(image);\n      // Set the state for alreadyClicked to the new array\n      this.setState({alreadyClicked : newAlreadyClicked})\n\n      // Shuffle the array\n      for(let i = cards.length - 1; i > 0; i -- ) {\n        let j = Number;\n        j = Math.floor(Math.random() * (i + 1));\n        [cards[i], cards[j]] = [cards[j], cards[i]];\n      }\n\n      // Set the state of the new array\n      this.setState({cards:cards})\n      }\n    }\n    else {\n      console.log(\"Game is already over, gotta restart\")\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Jumbotron \n          score = {this.state.score}\n          gameState = {this.state.gameState}\n          click = {this.newGame}\n        >\n        </Jumbotron>\n\n        <div className=\"\">\n          {cards.map(card =>\n            <Card\n              image = {card.image}\n              key = {card.id}\n              click = {this.shuffle}\n              id = {card.id} />)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}