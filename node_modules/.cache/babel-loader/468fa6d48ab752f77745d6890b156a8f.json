{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Calvin2\\\\Desktop\\\\Repo\\\\memorygame\\\\src\\\\App.js\";\nimport React from 'react';\nimport cards from \"./cards.json\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport Card from \"./components/Card\"; // import shuffle from \"./functions/shuffle\"\n\nconst alreadyClicked = [];\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cards,\n      alreadyClicked\n    };\n\n    this.shuffle = image => {\n      console.log(\"Test click\"); // alreadyClicked.append(this.image)\n\n      console.log(typeof alreadyClicked);\n      console.log(image);\n\n      for (let i = cards.length - 1; i > 0; i--) {\n        let j = Number;\n        j = Math.floor(Math.random() * (i + 1));\n        var _ref = [cards[j], cards[i]];\n        cards[i] = _ref[0];\n        cards[j] = _ref[1];\n      }\n\n      this.setState({\n        cards: cards\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, cards.map(card => React.createElement(Card, {\n      image: card.image,\n      key: card.id,\n      click: this.shuffle,\n      id: card.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Calvin2\\Desktop\\Repo\\memorygame\\src\\App.js"],"names":["React","cards","Jumbotron","Card","alreadyClicked","App","Component","state","shuffle","image","console","log","i","length","j","Number","Math","floor","random","setState","render","map","card","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,IAAP,MAAiB,mBAAjB,C,CAEA;;AAEA,MAAMC,cAAc,GAAG,EAAvB;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AAACN,MAAAA,KAAD;AAAQG,MAAAA;AAAR,KADwB;;AAAA,SAGhCI,OAHgC,GAGtBC,KAAK,IAAI;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EADiB,CAEjB;;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAOP,cAAnB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AACA,WAAI,IAAIG,CAAC,GAAGX,KAAK,CAACY,MAAN,GAAe,CAA3B,EAA8BD,CAAC,GAAG,CAAlC,EAAqCA,CAAC,EAAtC,EAA4C;AAC1C,YAAIE,CAAC,GAAGC,MAAR;AACAD,QAAAA,CAAC,GAAGE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBN,CAAC,GAAG,CAArB,CAAX,CAAJ;AAF0C,mBAGnB,CAACX,KAAK,CAACa,CAAD,CAAN,EAAWb,KAAK,CAACW,CAAD,CAAhB,CAHmB;AAGzCX,QAAAA,KAAK,CAACW,CAAD,CAHoC;AAG/BX,QAAAA,KAAK,CAACa,CAAD,CAH0B;AAI3C;;AACD,WAAKK,QAAL,CAAc;AAAClB,QAAAA,KAAK,EAACA;AAAP,OAAd;AACD,KAd+B;AAAA;;AAgBhCmB,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGnB,KAAK,CAACoB,GAAN,CAAUC,IAAI,IACb,oBAAC,IAAD;AACE,MAAA,KAAK,EAAIA,IAAI,CAACb,KADhB;AAEE,MAAA,GAAG,EAAIa,IAAI,CAACC,EAFd;AAGE,MAAA,KAAK,EAAI,KAAKf,OAHhB;AAIE,MAAA,EAAE,EAAIc,IAAI,CAACC,EAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CAFF,CADF;AAaD;;AA9B+B;;AAiClC,eAAelB,GAAf","sourcesContent":["import React from 'react';\nimport cards from \"./cards.json\"\n\nimport Jumbotron from \"./components/Jumbotron\"\nimport Card from \"./components/Card\"\n\n// import shuffle from \"./functions/shuffle\"\n\nconst alreadyClicked = []\n\nclass App extends React.Component {\n  state = {cards, alreadyClicked}\n\n  shuffle = image => {\n    console.log(\"Test click\")\n    // alreadyClicked.append(this.image)\n    console.log(typeof alreadyClicked)\n    console.log(image)\n    for(let i = cards.length - 1; i > 0; i -- ) {\n      let j = Number;\n      j = Math.floor(Math.random() * (i + 1));\n      [cards[i], cards[j]] = [cards[j], cards[i]];\n    }\n    this.setState({cards:cards})\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Jumbotron />\n        <div className=\"\">\n          {cards.map(card =>\n            <Card\n              image = {card.image}\n              key = {card.id}\n              click = {this.shuffle}\n              id = {card.id} />)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}